>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> BaseGeometry.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("siracha", )
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("siracha", -5)
Traceback (most recent call last):
    ...
ValueError: siracha must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("wintermelon", "wintermelon")
Traceback (most recent call last):
    ...
TypeError: wintermelon must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 1)

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
